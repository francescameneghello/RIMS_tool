window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "custom_function", "modulename": "custom_function", "kind": "module", "doc": "<p>This file contains all the customizable functions, which the user can define,\nand which are called by the simulator in the specific steps.</p>\n\n<p>The following table describes the case and inter-case features that can be\nused as input from a predictive model.</p>\n\n<table>\n<thead>\n<tr>\n  <th style=\"text-align:center;\">Feature</th>\n  <th style=\"text-align:left;\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td style=\"text-align:center;\">id_case</td>\n  <td style=\"text-align:left;\">Case id of the trace to which the event belongs.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">activity</td>\n  <td style=\"text-align:left;\">Represents the next activity to be performedg.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">enabled_time</td>\n  <td style=\"text-align:left;\">Timestamp of when the activity requests the role to be executed.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">start_time</td>\n  <td style=\"text-align:left;\">Timestamp of when the activity starts to run.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">end_time</td>\n  <td style=\"text-align:left;\">Timestamp of when the activity ends to run.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">role</td>\n  <td style=\"text-align:left;\">Designated role to perform the next activity.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">resource</td>\n  <td style=\"text-align:left;\">Role resource available to perform the activity.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">wip_wait</td>\n  <td style=\"text-align:left;\">Represents the number of traces running in the simulation before the waiting time.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">wip_start</td>\n  <td style=\"text-align:left;\">Represents the number of traces running in the simulation once an available resource is obtained to run the activity.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">wip_end</td>\n  <td style=\"text-align:left;\">Represents the number of traces running in the simulation at the end of the activity execution.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">wip_activity</td>\n  <td style=\"text-align:left;\">Represents the number of events running in the simulation that perform the same activity, once an available resource is obtained.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">ro_total</td>\n  <td style=\"text-align:left;\">The percentage of occupancy in terms of resources in use for the roles defined in the simulation.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">ro_single</td>\n  <td style=\"text-align:left;\">The percentage of occupancy in terms of resources in use for the role defined for the next activity.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">queue</td>\n  <td style=\"text-align:left;\">Represents the length of the queue for the required resource.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">prefix</td>\n  <td style=\"text-align:left;\">List of activities already performed.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">attribute_case</td>\n  <td style=\"text-align:left;\">Attributes defined for the trace.</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">attribute_event</td>\n  <td style=\"text-align:left;\">Attributes defined for the next event to be executed.</td>\n</tr>\n</tbody>\n</table>\n"}, {"fullname": "custom_function.attribute_function_case", "modulename": "custom_function", "qualname": "attribute_function_case", "kind": "function", "doc": "<p>Function to add one or more attributes to each trace.\nInput parameters are case id number and track start timestamp and return a dictionary.\nFor example, we generate a trace attribute, the requested loan amount, to simulate the process from the BPIChallenge2012A.xes log.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">case</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "custom_function.attribute_function_event", "modulename": "custom_function", "qualname": "attribute_function_event", "kind": "function", "doc": "<p>Function to add one or more attributes to each event.\nInput parameters are case id number and track start timestamp and return a dictionary.\nIn the following example, we assume that there are multiple bank branches where activities\nare executed by day of the week. From Monday to Wednesday, activities are executed in the\nEindhoven branch otherwise in the Utrecht one.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">case</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "custom_function.custom_arrivals_time", "modulename": "custom_function", "qualname": "custom_arrivals_time", "kind": "function", "doc": "<p>Function to define a new arrival of a track.\nFor example, we used an AutoRegression model for the <em>arrivals example</em>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"k\">case</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "custom_function.custom_processing_time", "modulename": "custom_function", "qualname": "custom_processing_time", "kind": "function", "doc": "<p>Define the processing time of the activity (return the duration in seconds).\nExample of features that can be used to predict:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;id_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_ACCEPTED&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;enabled_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-23 11:14:13&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;start_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-23 11:14:13&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;end_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-23 11:20:13&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;role&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Role 2&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Sue&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;wip_wait&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;wip_start&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;wip_end&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;wip_activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;ro_total&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;ro_single&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;queue&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;A_SUBMITTED&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PREACCEPTED&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;attribute_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;AMOUNT&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">59024</span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;attribute_event&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;bank_branch&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Eindhoven&quot;</span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">buffer</span><span class=\"p\">:</span> <span class=\"n\">utility</span><span class=\"o\">.</span><span class=\"n\">Buffer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "custom_function.custom_waiting_time", "modulename": "custom_function", "qualname": "custom_waiting_time", "kind": "function", "doc": "<p>Define the waiting time of the activity (return the duration in seconds).\nExample of features that can be used to predict:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;id_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;enabled_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;start_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;end_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;role&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Role 2&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;wip_wait&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;wip_start&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;wip_end&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;wip_activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;ro_total&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;ro_single&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;queue&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;A_SUBMITTED&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;attribute_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;AMOUNT&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">18207</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;attribute_event&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;bank_branch&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Eindhoven&quot;</span><span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">buffer</span><span class=\"p\">:</span> <span class=\"n\">utility</span><span class=\"o\">.</span><span class=\"n\">Buffer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "custom_function.custom_decision_mining", "modulename": "custom_function", "qualname": "custom_decision_mining", "kind": "function", "doc": "<p>Function to define the next activity from a decision point in the Petri net model.\nFor example, we used a Random Forest model for the <em>decision mining</em> example.</p>\n\n<p>Example of features that can be used to predict:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;id_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_FINALIZED&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;enabled_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-24 16:24:29&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;start_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-24 19:37:31&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;end_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-08-24 20:03:34&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;role&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Role 2&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Sue&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;wip_wait&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;wip_start&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;wip_end&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;wip_activity&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;ro_total&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;ro_single&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;queue&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;A_SUBMITTED&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PREACCEPTED&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_ACCEPTED&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;attribute_case&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;AMOUNT&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">86061</span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;attribute_event&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;bank_branch&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Eindhoven&quot;</span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">buffer</span><span class=\"p\">:</span> <span class=\"n\">utility</span><span class=\"o\">.</span><span class=\"n\">Buffer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace", "modulename": "event_trace", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "event_trace.Token", "modulename": "event_trace", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "event_trace.Token.__init__", "modulename": "event_trace", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">net</span><span class=\"p\">:</span> <span class=\"n\">pm4py</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">petri_net</span><span class=\"o\">.</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">PetriNet</span>,</span><span class=\"param\">\t<span class=\"n\">am</span><span class=\"p\">:</span> <span class=\"n\">pm4py</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">petri_net</span><span class=\"o\">.</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">Marking</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">Parameters</span>,</span><span class=\"param\">\t<span class=\"n\">process</span><span class=\"p\">:</span> <span class=\"n\">process</span><span class=\"o\">.</span><span class=\"n\">SimulationProcess</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"n\">utility</span><span class=\"o\">.</span><span class=\"n\">Prefix</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">writer</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">writer</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">parallel_object</span><span class=\"p\">:</span> <span class=\"n\">utility</span><span class=\"o\">.</span><span class=\"n\">ParallelObject</span>,</span><span class=\"param\">\t<span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "event_trace.Token.simulation", "modulename": "event_trace", "qualname": "Token.simulation", "kind": "function", "doc": "<p>The main function to handle the simulation of a single trace</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">simpy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Environment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.define_xor_next_activity", "modulename": "event_trace", "qualname": "Token.define_xor_next_activity", "kind": "function", "doc": "<p>Three different methods to decide which path following from XOR gateway:</p>\n\n<ul>\n<li>Random choice: each path has equal probability to be chosen (AUTO)</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;probability&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;A_ACCEPTED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;AUTO&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;skip_2&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;AUTO&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;A_FINALIZED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;AUTO&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Defined probability: in the file json it is possible to define for each path a specific probability (PROBABILITY as value)</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;probability&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;A_PREACCEPTED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">0.20</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;skip_1&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">0.80</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Custom method: it is possible to define a dedicate method that given the possible paths it returns the one to\nfollow, using whatever techniques the user prefers. (CUSTOM)</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;probability&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;A_CANCELLED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;CUSTOM&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;A_DECLINED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;CUSTOM&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;tauSplit_5&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;CUSTOM&quot;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">all_enabled_trans</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.define_processing_time", "modulename": "event_trace", "qualname": "Token.define_processing_time", "kind": "function", "doc": "<p>Three different methods are available to define the processing time for each activity:</p>\n\n<ul>\n<li>Distribution function: specify in the json file the distribution with the right parameters for each\nactivity, see the <a href=\"https://numpy.org/doc/stable/reference/random/generator.html\">numpy_distribution</a> distribution, (DISTRIBUTION).\n<strong>Be careful</strong>: A negative value generated by the distribution is not valid for the simulator.</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\"> </span><span class=\"nt\">&quot;processing_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_FINALIZED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;parameters&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;low&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;high&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7200</span><span class=\"p\">}},</span>\n<span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Custom method: it is possible to define a dedicated method that, given the activity and its\ncharacteristics, returns the duration of processing time required. (CUSTOM)</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;processing_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_FINALIZED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;custom&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Mixed: It is possible to define a distribution function for some activities and a dedicated method for the others.</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;processing_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_FINALIZED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;custom&quot;</span><span class=\"p\">},</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_REGISTERED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;parameters&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;low&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;high&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7200</span><span class=\"p\">}}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">activity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.define_waiting_time", "modulename": "event_trace", "qualname": "Token.define_waiting_time", "kind": "function", "doc": "<p>Three different methods are available to define the waiting time before each activity:</p>\n\n<ul>\n<li>Distribution function: specify in the json file the distribution with the right parameters for each\nactivity, see the <a href=\"https://numpy.org/doc/stable/reference/random/generator.html\">numpy_distribution</a> distribution, (DISTRIBUTION).\n<strong>Be careful</strong>: A negative value generated by the distribution is not valid for the simulator.</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\"> </span><span class=\"nt\">&quot;waiting_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;parameters&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;low&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;high&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7200</span><span class=\"p\">}}</span>\n<span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Custom method: it is possible to define a dedicated method that, given the next activity with its\nfeatures, returns the duration of waiting time. (CUSTOM)</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;waiting_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;custom&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<ul>\n<li>Mixed: As the processing time, it is possible to define a mix of methods for each activity.</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">&quot;waiting_time&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_PARTLYSUBMITTED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;custom&quot;</span><span class=\"p\">},</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;A_APPROVED&quot;</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;uniform&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;parameters&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">&quot;low&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;high&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7200</span><span class=\"p\">}}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">next_act</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.call_custom_processing_time", "modulename": "event_trace", "qualname": "Token.call_custom_processing_time", "kind": "function", "doc": "<p>Call to the custom functions in the file <em>custom_function.py</em>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.call_custom_waiting_time", "modulename": "event_trace", "qualname": "Token.call_custom_waiting_time", "kind": "function", "doc": "<p>Call to the custom functions in the file <em>custom_function.py</em>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.call_custom_xor_function", "modulename": "event_trace", "qualname": "Token.call_custom_xor_function", "kind": "function", "doc": "<p>Call to the custom functions in the file <em>custom_function.py</em>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">all_enabled_trans</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "event_trace.Token.next_transition", "modulename": "event_trace", "qualname": "Token.next_transition", "kind": "function", "doc": "<p>Method to define the next activity in the petrinet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">env</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inter_trigger_timer", "modulename": "inter_trigger_timer", "kind": "module", "doc": "<p>Class to manage the arrivals times of tokes in the process.</p>\n"}, {"fullname": "inter_trigger_timer.InterTriggerTimer", "modulename": "inter_trigger_timer", "qualname": "InterTriggerTimer", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "inter_trigger_timer.InterTriggerTimer.__init__", "modulename": "inter_trigger_timer", "qualname": "InterTriggerTimer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">Parameters</span>,</span><span class=\"param\">\t<span class=\"n\">process</span><span class=\"p\">:</span> <span class=\"n\">process</span><span class=\"o\">.</span><span class=\"n\">SimulationProcess</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span></span>)</span>"}, {"fullname": "inter_trigger_timer.InterTriggerTimer.get_next_arrival", "modulename": "inter_trigger_timer", "qualname": "InterTriggerTimer.get_next_arrival", "kind": "function", "doc": "<p>Generate a new arrival from the distribution and check if the new token arrival is inside calendar,\notherwise wait for a suitable time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">env</span>, </span><span class=\"param\"><span class=\"k\">case</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inter_trigger_timer.InterTriggerTimer.custom_arrival", "modulename": "inter_trigger_timer", "qualname": "InterTriggerTimer.custom_arrival", "kind": "function", "doc": "<p>Call to the custom functions in the file custom_function.py.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"k\">case</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "parameters", "modulename": "parameters", "kind": "module", "doc": "<p>Class for reading simulation parameters</p>\n"}, {"fullname": "parameters.Parameters", "modulename": "parameters", "qualname": "Parameters", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "parameters.Parameters.__init__", "modulename": "parameters", "qualname": "Parameters.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path_parameters</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">traces</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "parameters.Parameters.TRACES", "modulename": "parameters", "qualname": "Parameters.TRACES", "kind": "variable", "doc": "<p>TRACES: number of traces to generate</p>\n"}, {"fullname": "parameters.Parameters.PATH_PARAMETERS", "modulename": "parameters", "qualname": "Parameters.PATH_PARAMETERS", "kind": "variable", "doc": "<p>PATH_PARAMETERS: path of json file for others parameters.</p>\n"}, {"fullname": "parameters.Parameters.read_metadata_file", "modulename": "parameters", "qualname": "Parameters.read_metadata_file", "kind": "function", "doc": "<p>Method to read parameters from json file, see <em>main page</em> to get the whole list of simulation parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "process", "modulename": "process", "kind": "module", "doc": "<p>Class to manage the resources shared by all the traces in the process.</p>\n\n<p><img src=\"images/process_class.png\" alt=\"Alt Text\" width=\"780\"></p>\n"}, {"fullname": "process.SimulationProcess", "modulename": "process", "qualname": "SimulationProcess", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "process.SimulationProcess.__init__", "modulename": "process", "qualname": "SimulationProcess.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">simpy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Environment</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">Parameters</span></span>)</span>"}, {"fullname": "process.SimulationProcess.define_single_role", "modulename": "process", "qualname": "SimulationProcess.define_single_role", "kind": "function", "doc": "<p>Definition of a <em>RoleSimulator</em> object for each role in the process.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "process.SimulationProcess.get_occupations_single_role", "modulename": "process", "qualname": "SimulationProcess.get_occupations_single_role", "kind": "function", "doc": "<p>Method to retrieve the specified role occupancy in percentage, as an intercase feature:\n$\\frac{resources \\: occupated \\: in \\:role}{total\\:resources\\:in\\:role}$.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">resource</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "process.SimulationProcess.get_occupations_all_role", "modulename": "process", "qualname": "SimulationProcess.get_occupations_all_role", "kind": "function", "doc": "<p>Method to retrieve the occupancy in percentage of all roles, as an intercase feature.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "result_analysis", "modulename": "result_analysis", "kind": "module", "doc": "<p>Class to generate the output json file \"result_simulated_log(experiment_name)\" with some analysis on the simulated log.\nExample of analysis:</p>\n\n<table>\n<thead>\n<tr>\n  <th style=\"text-align:center;\">Name</th>\n  <th style=\"text-align:left;\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td style=\"text-align:center;\">total_events</td>\n  <td style=\"text-align:left;\">Total events in the log</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">total_traces</td>\n  <td style=\"text-align:left;\">Total traces in the log</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\"><em>A</em>_frequency</td>\n  <td style=\"text-align:left;\">Total occurrences of activity <em>A</em> in the log</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">total_duration</td>\n  <td style=\"text-align:left;\">Total duration of simulation</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">start_date</td>\n  <td style=\"text-align:left;\">Start date of the simulation</td>\n</tr>\n<tr>\n  <td style=\"text-align:center;\">end_date</td>\n  <td style=\"text-align:left;\">End date of the simulation</td>\n</tr>\n</tbody>\n</table>\n"}, {"fullname": "result_analysis.Result", "modulename": "result_analysis", "qualname": "Result", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "result_analysis.Result.__init__", "modulename": "result_analysis", "qualname": "Result.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">Parameters</span></span>)</span>"}, {"fullname": "result_analysis.Result.analysis_log", "modulename": "result_analysis", "qualname": "Result.analysis_log", "kind": "function", "doc": "<p>Method to compute the analysis over the single log</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sim</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "result_analysis.Result.general_analysis", "modulename": "result_analysis", "qualname": "Result.general_analysis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sim_df</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "role_simulator", "modulename": "role_simulator", "kind": "module", "doc": "<p>Class to define the role object within the simulation.\nThe role is defined by its name (<em>name</em>), the amount of resources available (<em>capacity</em>),\nand the schedule assigned to it (<em>calendar</em>).</p>\n\n<p>Each role needs to be defined within the json file in the following format.\nThe example describes <em>Role 2</em>, Ellen and Sue, who work Monday\nthrough Saturday, from 8 a.m. to 7 p.m.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\">    </span><span class=\"s2\">&quot;resource&quot;</span>:<span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">        </span>........\n<span class=\"w\">        </span><span class=\"s2\">&quot;name_of_role&quot;</span>:<span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">            </span><span class=\"s2\">&quot;resources&quot;</span>:<span class=\"w\"> </span><span class=\"c1\">#List of resources,</span>\n<span class=\"w\">            </span><span class=\"s2\">&quot;calendar&quot;</span>:<span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">                </span><span class=\"s2\">&quot;days&quot;</span>:<span class=\"w\"> </span><span class=\"c1\">#List of working days of the role,</span>\n<span class=\"w\">                        </span><span class=\"c1\">#given as integer 0 means Sunday and 6 means Saturday.</span>\n<span class=\"w\">                </span><span class=\"s2\">&quot;hour_min&quot;</span>:<span class=\"w\"> </span><span class=\"c1\">#the hour of the start of the working day,</span>\n<span class=\"w\">                </span><span class=\"s2\">&quot;hour_max&quot;</span>:<span class=\"w\"> </span><span class=\"c1\">#the hour of the end of the working day</span>\n<span class=\"w\">            </span><span class=\"o\">}</span>\n<span class=\"w\">        </span><span class=\"o\">}</span>\n<span class=\"w\">        </span>........\n<span class=\"w\">    </span><span class=\"o\">}</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">&quot;Role 2&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;resources&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;Ellen&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;Sue&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;calendar&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;days&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;hour_min&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;hour_max&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">19</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Finally, in the simulation parameters file, we have to indicate the role assigned to the execution of each activity.\n(Here to view complete examples)</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">&quot;resource_table&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;role&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Role 1&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;task&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_SUBMITTED&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;role&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Role 2&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;task&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;A_PARTLYSUBMITTED&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n</code></pre>\n</div>\n"}, {"fullname": "role_simulator.RoleSimulator", "modulename": "role_simulator", "qualname": "RoleSimulator", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "role_simulator.RoleSimulator.__init__", "modulename": "role_simulator", "qualname": "RoleSimulator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">simpy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Environment</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">capacity</span>, </span><span class=\"param\"><span class=\"n\">calendar</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span>)</span>"}, {"fullname": "role_simulator.RoleSimulator.release", "modulename": "role_simulator", "qualname": "RoleSimulator.release", "kind": "function", "doc": "<p>Method to release the role resource that was used to perform the activity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">request</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "role_simulator.RoleSimulator.request", "modulename": "role_simulator", "qualname": "RoleSimulator.request", "kind": "function", "doc": "<p>Method to require a resource of the role needed to perform the activity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "role_simulator.RoleSimulator.to_time_schedule", "modulename": "role_simulator", "qualname": "RoleSimulator.to_time_schedule", "kind": "function", "doc": "<p>Method to check the schedule of the requested resource and\neventually it returns the time to wait before executing the activity.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timestamp</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "run_simulation", "modulename": "run_simulation", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "run_simulation.EXAMPLE", "modulename": "run_simulation", "qualname": "EXAMPLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;arrivalsD&#x27;: [&#x27;example/example_arrivals/bpi2012.pnml&#x27;, &#x27;example/example_arrivals/input_arrivals_example_distribution.json&#x27;, 1, 15, &#x27;example_arrivals&#x27;], &#x27;arrivalsS&#x27;: [&#x27;example/example_arrivals/bpi2012.pnml&#x27;, &#x27;example/example_arrivals/input_arrivals_example_timeseries.json&#x27;, 1, 15, &#x27;example_arrivals&#x27;], &#x27;process_times&#x27;: [&#x27;example/example_process_times/synthetic_petrinet.pnml&#x27;, &#x27;example/example_process_times/input_process_times_example.json&#x27;, 1, 15, &#x27;example_process_times&#x27;], &#x27;decision mining&#x27;: [&#x27;example/example_decision_mining/bpi2012.pnml&#x27;, &#x27;example/example_decision_mining/input_decision_mining_example.json&#x27;, 1, 10, &#x27;example_decision_mining&#x27;]}"}, {"fullname": "run_simulation.setup", "modulename": "run_simulation", "qualname": "setup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">simpy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Environment</span>, </span><span class=\"param\"><span class=\"n\">PATH_PETRINET</span>, </span><span class=\"param\"><span class=\"n\">params</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">NAME</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "run_simulation.run_simulation", "modulename": "run_simulation", "qualname": "run_simulation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">PATH_PETRINET</span>, </span><span class=\"param\"><span class=\"n\">PATH_PARAMETERS</span>, </span><span class=\"param\"><span class=\"n\">N_SIMULATION</span>, </span><span class=\"param\"><span class=\"n\">N_TRACES</span>, </span><span class=\"param\"><span class=\"n\">NAME</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "run_simulation.main", "modulename": "run_simulation", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">argv</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility", "modulename": "utility", "kind": "module", "doc": "<ul>\n<li>Prefix: Class to handle the prefix shared by events within traces.</li>\n<li>Buffer: Class to handle the features of a single event required for predictive models.</li>\n</ul>\n"}, {"fullname": "utility.define_folder_output", "modulename": "utility", "qualname": "define_folder_output", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.ParallelObject", "modulename": "utility", "qualname": "ParallelObject", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "utility.Prefix", "modulename": "utility", "qualname": "Prefix", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "utility.Prefix.add_activity", "modulename": "utility", "qualname": "Prefix.add_activity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">activity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Prefix.get_prefix", "modulename": "utility", "qualname": "Prefix.get_prefix", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Buffer", "modulename": "utility", "qualname": "Buffer", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "utility.Buffer.__init__", "modulename": "utility", "qualname": "Buffer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">writer</span>, </span><span class=\"param\"><span class=\"n\">values</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "utility.Buffer.buffer", "modulename": "utility", "qualname": "Buffer.buffer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "utility.Buffer.writer", "modulename": "utility", "qualname": "Buffer.writer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "utility.Buffer.set_feature", "modulename": "utility", "qualname": "Buffer.set_feature", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">feature</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Buffer.get_feature", "modulename": "utility", "qualname": "Buffer.get_feature", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">feature</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Buffer.print_values", "modulename": "utility", "qualname": "Buffer.print_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Buffer.get_buffer_keys", "modulename": "utility", "qualname": "Buffer.get_buffer_keys", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "utility.Buffer.reset", "modulename": "utility", "qualname": "Buffer.reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();